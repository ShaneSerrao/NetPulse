@{
    var d = (PulsNet.Web.Models.Device)ViewBag.Device;
    ViewData["Title"] = "OID Browser";
}
<div style="padding:24px">
<h1>OID Browser — @d.ClientName (@d.IpAddress)</h1>
@if (TempData["Msg"]!=null){<div style="background:#1b2a3e;padding:8px;border-radius:8px;margin-bottom:10px">@TempData["Msg"]</div>}
<div class="device-card" style="padding:16px">
  <div style="display:flex;gap:8px;align-items:center">
    <input id="baseOid" value="1.3.6.1.2.1" style="flex:1" />
    <button onclick="runWalk()">Walk</button>
  </div>
  <div id="results" style="margin-top:12px"></div>
  <form id="saveForm" method="post" action="/OidBrowser/SaveSelected">
    @Html.AntiForgeryToken()
    <input type="hidden" name="deviceId" value="@d.Id" />
    <div id="hiddenInputs"></div>
    <button type="submit">Save Selected to Monitoring</button>
  </form>
</div>
<script>
async function runWalk(){
  const baseOid = document.getElementById('baseOid').value || '1.3.6.1.2.1';
  const res = await fetch(`/OidBrowser/Walk?deviceId=@d.Id&baseOid=${encodeURIComponent(baseOid)}`);
  if(!res.ok) return;
  const data = await res.json();
  const results = document.getElementById('results');
  results.innerHTML='';
  for(const cat of Object.keys(data)){
    const details = document.createElement('details');
    details.open = (cat === 'Interfaces');
    const sum = document.createElement('summary'); sum.textContent = cat; sum.style.cursor='pointer'; sum.style.fontWeight='700';
    details.appendChild(sum);
    const list = document.createElement('div'); list.style.margin='8px 0';
    data[cat].forEach(item=>{
      const [oid,name,value] = item;
      const label = document.createElement('label'); label.style.display='flex'; label.style.alignItems='center'; label.style.gap='8px'; label.style.padding='4px 0';
      const cb = document.createElement('input'); cb.type='checkbox'; cb.dataset.oid = oid; cb.dataset.label = name; cb.dataset.cat = cat;
      const text = document.createElement('span'); text.textContent = `${name} — ${oid} = ${value}`;
      label.appendChild(cb); label.appendChild(text);
      list.appendChild(label);
    });
    details.appendChild(list);
    results.appendChild(details);
  }
  syncHidden();
  results.addEventListener('change', syncHidden);
}
function syncHidden(){
  const sel = Array.from(document.querySelectorAll('#results input[type="checkbox"]:checked'));
  const hidden = document.getElementById('hiddenInputs');
  hidden.innerHTML='';
  sel.forEach(cb=>{
    const i1 = document.createElement('input'); i1.type='hidden'; i1.name='selectedOids'; i1.value = cb.dataset.oid; hidden.appendChild(i1);
    const i2 = document.createElement('input'); i2.type='hidden'; i2.name='labels'; i2.value = cb.dataset.label || ''; hidden.appendChild(i2);
    const i3 = document.createElement('input'); i3.type='hidden'; i3.name='categories'; i3.value = cb.dataset.cat || ''; hidden.appendChild(i3);
  });
}
</script>
</div>